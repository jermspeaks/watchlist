---
description: 
globs: 
alwaysApply: false
---
# React Day Picker Usage Guidelines

## Import Statements
Always include the style import when using react-day-picker components:
```tsx
import { DayPicker } from "react-day-picker"
import "react-day-picker/style.css"
```

## Class Names
Use the current non-deprecated class names in the `classNames` prop:

âœ… **Correct class names**:
- `selected` (not `day_selected`)
- `today` (not `day_today`)
- `outside` (not `day_outside`)
- `disabled` (not `day_disabled`)
- `range_start` (not `day_range_start`)
- `range_end` (not `day_range_end`)
- `range_middle` (not `day_range_middle`)
- `hidden` (not `day_hidden`)

## Props
- Use `autoFocus` instead of `initialFocus` as `initialFocus` is deprecated.
- Use `components` prop for navigation buttons

## Navigation Buttons
When customizing navigation buttons, pass through the props:

```tsx
components={{
  PreviousMonthButton: (props) => (
    <Button 
      {...props} 
      variant="ghost" 
      size="sm" 
      className="h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 transition-opacity"
    >
      <ChevronLeft className="h-4 w-4" />
    </Button>
  ),
  NextMonthButton: (props) => (
    <Button 
      {...props} 
      variant="ghost" 
      size="sm" 
      className="h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 transition-opacity"
    >
      <ChevronRight className="h-4 w-4" />
    </Button>
  ),
}}
```

## Day Styling
For proper day styling and centering, use:
```tsx
day: cn(
  "h-9 w-9 p-0 font-normal aria-selected:opacity-100",
  "inline-flex items-center justify-center rounded-md transition-colors"
)
```

## Example Implementation
```tsx
<Calendar
  initialFocus
  mode="range"
  defaultMonth={value?.from || today}
  selected={value}
  onSelect={onChange}
  numberOfMonths={2}
  className="p-3"
  classNames={{
    months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
    month: "space-y-4",
    caption: "flex justify-center relative items-center px-8",
    caption_label: "text-sm font-medium",
    nav: "space-x-1 flex items-center",
    nav_button: cn(
      "absolute h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 transition-opacity"
    ),
    nav_button_previous: "left-1",
    nav_button_next: "right-1",
    table: "w-full border-collapse space-y-1",
    head_row: "flex",
    head_cell: "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem] text-center",
    row: "flex w-full mt-2",
    cell: "relative p-0 text-center text-sm focus-within:relative focus-within:z-20",
    day: cn(
      "h-9 w-9 p-0 font-normal aria-selected:opacity-100",
      "inline-flex items-center justify-center rounded-md transition-colors"
    ),
    selected: "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
    today: "bg-accent text-accent-foreground",
    outside: "text-muted-foreground/30 opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30",
    disabled: "text-muted-foreground opacity-50",
    range_start: "rounded-l-md bg-primary text-primary-foreground",
    range_end: "rounded-r-md bg-primary text-primary-foreground",
    range_middle: cn(
      "rounded-none",
      "aria-selected:bg-accent aria-selected:text-accent-foreground"
    ),
    hidden: "invisible",
  }}
  components={{
    PreviousMonthButton: (props) => (
      <Button 
        {...props} 
        variant="ghost" 
        size="sm" 
        className="h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 transition-opacity"
      >
        <ChevronLeft className="h-4 w-4" />
      </Button>
    ),
    NextMonthButton: (props) => (
      <Button 
        {...props} 
        variant="ghost" 
        size="sm" 
        className="h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 transition-opacity"
      >
        <ChevronRight className="h-4 w-4" />
      </Button>
    ),
  }}
/>
``` 
